{"version":3,"file":"static/js/100.67a55566.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/UI/Input/Input.jsx","redux/contacts/selectors.js","components/AppContacts/AppContacts.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/FormPatch/FormPatch.styled.js","redux/filter/selectors.js","components/FormPatch/FormPatch.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/UI/Title/Title.styled.js","components/UI/Title/Title.jsx","components/AppContacts/AppContacts.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  background-color: ${p => p.theme.colors.backgroundColors};\r\n  color: ${p => p.theme.colors.colorText};\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  margin: 0 auto;\r\n  box-shadow: 0px 0px 19px 0px rgba(69, 162, 158, 1);\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  &:first-child {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\nexport const Span = styled.span`\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  background-color: ${p => p.theme.colors.colorElement};\r\n  color: ${p => p.theme.colors.btnСolorText};\r\n  border: 1px solid ${p => p.theme.colors.white};\r\n  padding: 5px;\r\n  font-weight: 700;\r\n\r\n  &:active,\r\n  &:focus {\r\n    background-color: ${p => p.theme.colors.white};\r\n    outline: transparent;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: block;\r\n  min-width: 130px;\r\n  height: 35px;\r\n  margin-left: 20px;\r\n  color: ${p => p.theme.colors.btnСolorText};\r\n  background-color: ${p => p.theme.colors.colorElement};\r\n  border-radius: 20px;\r\n  padding: 7px 10px;\r\n  border: 0;\r\n  font-size: 18px;\r\n  transition: box-shadow 250ms ease, transform 250ms ease;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    box-shadow: ${p => p.theme.boxShadow};\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { Input } from '../../ContactForm/ContactForm.styled';\r\n\r\nexport const InputElement = props => {\r\n  return <Input {...props} />;\r\n};\r\n\r\nInputElement.protoType = {\r\n  props: PropTypes.object.isRequired,\r\n};\r\n","export const selectContacts = state => state.contacts.items;\r\nexport const selectIsLoading = state => state.contacts.isLoading;\r\nexport const selectError = state => state.contacts.error;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  background-color: rgba(11, 12, 16, 0.6);\r\n  padding: 30px 20px;\r\n  margin: 0 auto;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin-top: 12px;\r\n  box-shadow: 0px 0px 19px 0px rgba(69, 162, 158, 1);\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n`;\r\n\r\n","import React, { useState } from 'react';\r\nimport { PatternFormat } from 'react-number-format';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Form, Label, Input, Span, Button } from './ContactForm.styled';\r\nimport { InputElement } from '../UI/Input/Input';\r\n\r\nexport const ContactForm = ({ onSubmit, text }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const hendleChangeName = e => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const hendleChangeNumber = e => {\r\n    setNumber(e.currentTarget.value);\r\n  };\r\n\r\n  const hendleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={hendleSubmit}>\r\n      <Label>\r\n        <Span>Name</Span>\r\n        <InputElement\r\n          value={name}\r\n          onChange={hendleChangeName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n      </Label>\r\n\r\n      <Label>\r\n        <Span>Number</Span>\r\n        <PatternFormat\r\n          customInput={Input}\r\n          format=\"+38 (###)-###-##-##\"\r\n          allowEmptyFormatting\r\n          mask=\"_\"\r\n          value={number}\r\n          onChange={hendleChangeNumber}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n      </Label>\r\n      <Button type=\"submit\">{text}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Div = styled.div`\r\n  background-color: ${p => p.theme.colors.backgroundColors};\r\n  color: ${p => p.theme.colors.colorText};\r\n  padding: 10px 20px;\r\n  display: inline-block;\r\n  border-radius: 10px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  font-size: 20px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  background-color: ${p => p.theme.colors.colorElement};\r\n  color: ${p => p.theme.colors.btnСolorText};\r\n  border: transparent;\r\n  padding: 5px;\r\n  font-weight: 700;\r\n  border: 1px solid ${p => p.theme.colors.white};\r\n  &:active,\r\n  &:focus {\r\n    outline: transparent;\r\n  }\r\n  transition: box-shadow 250ms ease, transform 250ms ease;\r\n  &:hover,\r\n  &:focus {\r\n    background-color: ${p => p.theme.colors.white};\r\n    transform: scale(1.1);\r\n    box-shadow: ${p => p.theme.sectionShadow};\r\n  }\r\n`;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Div, Input, Span } from './Filter.styled';\r\nimport { filterContacts } from 'redux/filter/slice';\r\n\r\nexport const Filter = () => {\r\n  const value = useSelector(state => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const contactSearch = e => {\r\n    dispatch(filterContacts(e.target.value));\r\n  };\r\n  return (\r\n    <Div>\r\n      <label>\r\n        <Span>Find contacts by name:</Span>\r\n        <Input type=\"text\" value={value} onChange={contactSearch} />\r\n      </label>\r\n    </Div>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  background-color: ${p => p.theme.colors.backgroundColors};\r\n  color: ${p => p.theme.colors.colorText};\r\n  width: 320px;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-direction: column;\r\n  box-shadow: 0px 0px 19px 0px rgba(69, 162, 158, 1);\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  width: 100%;\r\n`;\r\nexport const Span = styled.span`\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  background-color: ${p => p.theme.colors.colorElement};\r\n  color: ${p => p.theme.colors.btnСolorText};\r\n  border: 1px solid ${p => p.theme.colors.white};\r\n  padding: 5px;\r\n  font-weight: 700;\r\n\r\n  &:active,\r\n  &:focus {\r\n    background-color: ${p => p.theme.colors.white};\r\n    outline: transparent;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: block;\r\n  min-width: 130px;\r\n  height: 35px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  color: ${p => p.theme.colors.btnСolorText};\r\n  background-color: ${p => p.theme.colors.colorElement};\r\n  border-radius: 20px;\r\n  padding: 7px 10px;\r\n  border: 0;\r\n  font-size: 18px;\r\n  transition: box-shadow 250ms ease, transform 250ms ease;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    box-shadow: ${p => p.theme.sectionShadow};\r\n  }\r\n`;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\nimport { selectContacts } from 'redux/contacts/selectors';\r\n\r\nexport const getFilter = state => state.filter;\r\n\r\nexport const filterListContacts = createSelector(\r\n  [selectContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const filterContacts = contacts.filter(contact => {\r\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\r\n    });\r\n    return filterContacts;\r\n  }\r\n);\r\n","import React, { useState } from 'react';\r\nimport { PatternFormat } from 'react-number-format';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Form, Label, Input, Span, Button } from './FormPatch.styled';\r\nimport { InputElement } from '../UI/Input/Input';\r\nimport { filterListContacts } from 'redux/filter/selectors';\r\n\r\nexport const FornPatch = ({ onSubmit, modalClose, id }) => {\r\n  const contactList = useSelector(filterListContacts);\r\n\r\n  const contact = contactList.filter(contact => contact.id === id);\r\n\r\n  const [name, setName] = useState(contact[0].name);\r\n  const [number, setNumber] = useState(contact[0].number);\r\n\r\n  const hendleChangeName = e => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const hendleChangeNumber = e => {\r\n    setNumber(e.currentTarget.value);\r\n  };\r\n\r\n  const hendleSubmit = e => {\r\n    e.preventDefault();\r\n    modalClose();\r\n    onSubmit({ name, number, id });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={hendleSubmit}>\r\n      <Label>\r\n        <Span>Name</Span>\r\n        <InputElement\r\n          value={name}\r\n          onChange={hendleChangeName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n      </Label>\r\n\r\n      <Label>\r\n        <Span>Number</Span>\r\n        <PatternFormat\r\n          customInput={Input}\r\n          format=\"+38 (###)-###-##-##\"\r\n          allowEmptyFormatting\r\n          mask=\"_\"\r\n          value={number}\r\n          onChange={hendleChangeNumber}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n      </Label>\r\n      <Button type=\"submit\">Save</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nFornPatch.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  modalClose: PropTypes.func.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n  position: relative;\r\n  background-color: white;\r\n  padding: 20px 15px;\r\n  max-width: 700px;\r\n  max-height: 300px;\r\n  background-color: ${p => p.theme.colors.backgroundColors};\r\n  border-radius: 10px;\r\n  box-shadow: ${p => p.theme.sectionShadow};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  position: absolute;\r\n  top: 8px;\r\n  right: 8px;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background-color: ${p => p.theme.colors.backgroundColors};\r\n  border: 1px solid ${p => p.theme.colors.colorElement};\r\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\r\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1),\r\n    border 250ms cubic-bezier(0.4, 0, 0.2, 1),\r\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    width: 13px;\r\n    height: 2px;\r\n    background-color: ${p => p.theme.colors.colorElement};\r\n    transform: translate(-50%, -50%) rotate(-45deg);\r\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    width: 13px;\r\n    height: 2px;\r\n    background-color: ${p => p.theme.colors.colorElement};\r\n    transform: translate(-50%, -50%) rotate(45deg);\r\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n  &:hover,\r\n  &:focus {\r\n    background-color: ${p => p.theme.colors.colorElement};\r\n    border: 1px solid ${p => p.theme.colors.backgroundColors};\r\n    box-shadow: ${p => p.theme.sectionShadow};\r\n    transform: scale(1.4);\r\n    &::after,\r\n    &::before {\r\n      background-color: ${p => p.theme.colors.backgroundColors};\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { FornPatch } from 'components/FormPatch/FormPatch';\r\nimport { patchContacts } from 'redux/contacts/operations';\r\n\r\nimport { Overlay, ModalContainer, Button } from './Modal.styled';\r\n\r\nexport const Modal = ({ onClose, id }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const patchContact = e => {\r\n    dispatch(patchContacts(e));\r\n  };\r\n\r\n  const hendleBackdropClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n  const hendlerKeydown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', hendlerKeydown);\r\n    return () => {\r\n      window.removeEventListener('keydown', hendlerKeydown);\r\n    };\r\n  });\r\n\r\n  return createPortal(\r\n    <Overlay oonClick={hendleBackdropClick}>\r\n      <ModalContainer>\r\n        <Button onClick={onClose}></Button>\r\n        <FornPatch\r\n          text={'Update contact'}\r\n          modalClose={onClose}\r\n          onSubmit={patchContact}\r\n          id={id}\r\n        />\r\n      </ModalContainer>\r\n    </Overlay>,\r\n    document.getElementById('modal-root')\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  margin-top: 12px;\r\n  box-shadow: 0px 0px 19px 0px rgba(69, 162, 158, 1);\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  min-height: 300px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  position: relative;\r\n  padding: 15px 15px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: -5px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  color: ${p => p.theme.colors.white};\r\n  background-color: ${p => p.theme.colors.backgroundColors};\r\n  font-weight: 700;\r\n  font-style: italic;\r\n  display: grid;\r\n  grid-template-columns: 30px auto 180px 30px 30px;\r\n  grid-column-gap: 10px;\r\n  padding: 10px 10px;\r\n  border-radius: 10px;\r\n  transition: box-shadow 250ms ease, transform 250ms ease;\r\n  height: 20px;\r\n  flex-basis: calc(100% / 2 - 30px);\r\n  margin: 5px;\r\n  width: 100%;\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    box-shadow: ${p => p.theme.sectionShadow};\r\n  }\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  color: ${p => p.theme.colors.btnСolorText};\r\n  background-color: ${p => p.theme.colors.colorElement};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  padding: 3px 3px;\r\n  border: 0;\r\n  transition: box-shadow 250ms ease, transform 250ms ease;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    box-shadow: ${p => p.theme.sectionShadow};\r\n  }\r\n`;\r\n\r\nexport const Error = styled.p`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  color: ${p => p.theme.colors.white};\r\n  font-size: 40px;\r\n  text-align: center;\r\n  background-color: ${p => p.theme.colors.backgroundColors};\r\n  padding: 20px 30px;\r\n  border-radius: 10px;\r\n  box-shadow: ${p => p.theme.sectionShadow};\r\n  z-index: 2;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { BsTrash, BsPersonCircle, BsPen } from 'react-icons/bs';\r\n\r\nimport { Modal } from 'components/Modal/Modal';\r\nimport { Loading } from 'components/UI/Loading/Loading';\r\nimport {\r\n  List,\r\n  Item,\r\n  Span,\r\n  Button,\r\n  Error,\r\n  Container,\r\n} from './ContactList.styled';\r\nimport { deleteContact } from 'redux/contacts/operations';\r\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\r\n\r\nexport const ContactList = ({ contactList }) => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const error = useSelector(selectError);\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n  const [idContact, setIdContact] = useState(null);\r\n\r\n  const openModal = id => {\r\n    setIdContact(id);\r\n    setIsOpenModal(true);\r\n  };\r\n  const toggleModal = () => {\r\n    setIsOpenModal(isOpenModal => !isOpenModal);\r\n  };\r\n\r\n  const deletContact = idContact => {\r\n    dispatch(deleteContact(idContact));\r\n    toast.info(' Contact deleted. ✅ ');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <List>\r\n        {isLoading && <Loading visible={isLoading} />}\r\n        {error && <Error>{error}</Error>}\r\n        {contactList.map(({ id, name, number }) => (\r\n          <Item key={id} id={id}>\r\n            <Span>\r\n              <BsPersonCircle />\r\n            </Span>\r\n            <Span>{name} </Span>\r\n            <Span>{number}</Span>\r\n            <Button\r\n              type=\"button\"\r\n              disabled={isLoading}\r\n              onClick={() => openModal(id)}\r\n            >\r\n              <BsPen />\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              disabled={isLoading}\r\n              onClick={() => deletContact(id)}\r\n            >\r\n              <BsTrash />\r\n            </Button>\r\n          </Item>\r\n        ))}\r\n      </List>\r\n\r\n      {isOpenModal && <Modal onClose={toggleModal} id={idContact} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.array.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h2`\r\n  color: ${p => p.theme.colors.colorText};\r\n  margin-bottom: 10px;\r\n  margin-top: 0;\r\n  text-align: center;\r\n  font-size: 34px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { Title } from './Title.styled';\r\n\r\nexport const Caption = ({ title }) => {\r\n  return <Title>{title}</Title>;\r\n};\r\n\r\nCaption.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { nanoid } from 'nanoid';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { addContact } from 'redux/contacts/operations';\r\nimport { selectContacts } from 'redux/contacts/selectors';\r\n\r\nimport { useEffect } from 'react';\r\nimport { Wrapper, Container } from './AppContacts.styled';\r\nimport { ContactForm } from '../ContactForm/ContactForm';\r\nimport { Filter } from '../Filter/Filter';\r\nimport { ContactList } from '../ContactList/ContactList';\r\nimport { Caption } from '../UI/Title/Title';\r\nimport { filterListContacts } from 'redux/filter/selectors';\r\nimport { fetchContacts } from 'redux/contacts/operations';\r\n\r\nexport const AppContacts = () => {\r\n  const contactList = useSelector(filterListContacts);\r\n  const contacts = useSelector(selectContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const addTodo = contact => {\r\n    if (!contact) {\r\n      return;\r\n    }\r\n\r\n    for (let userContact of contacts) {\r\n      if (userContact.number === contact.number) {\r\n        console.log(userContact.number === contact.number)\r\n        toast.error(\r\n          `Oops!!! this phone number ${contact.number} is already saved in your contact list under the name \"${userContact.name}\".`\r\n        );\r\n        return;\r\n      }\r\n    }\r\n    contact.id = nanoid();\r\n\r\n    dispatch(addContact(contact));\r\n\r\n    toast.success('Contact added. ✅');\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Caption title=\"Phonebook\" />\r\n      <ContactForm onSubmit={addTodo} text={'Add contact'} />\r\n      <Container>\r\n        <Caption title=\"Contacts\" />\r\n        <Filter />\r\n      </Container>\r\n        <ContactList contactList={contactList} />\r\n    </Wrapper>\r\n  );\r\n};\r\n","import { AppContacts } from 'components/AppContacts/AppContacts';\r\nimport { useAuth } from 'hooks';\r\nimport { LoadingUser } from 'components/UI/Loading/Loading';\r\n\r\nconst Contacts = () => {\r\n  const { isLoading } = useAuth();\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingUser />}\r\n      <AppContacts />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"],"names":["Form","styled","p","theme","colors","backgroundColors","colorText","Label","Span","Input","colorElement","btnСolorText","white","Button","boxShadow","InputElement","props","protoType","PropTypes","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","Wrapper","Container","ContactForm","onSubmit","text","useState","name","setName","number","setNumber","e","preventDefault","value","onChange","currentTarget","type","pattern","title","required","customInput","format","allowEmptyFormatting","mask","Div","sectionShadow","Filter","useSelector","filter","dispatch","useDispatch","filterContacts","target","filterListContacts","createSelector","contact","toLowerCase","includes","FornPatch","modalClose","id","Overlay","ModalContainer","Modal","onClose","hendlerKeydown","code","useEffect","window","addEventListener","removeEventListener","createPortal","oonClick","onClick","patchContacts","document","getElementById","List","Item","Error","ContactList","contactList","isOpenModal","setIsOpenModal","idContact","setIdContact","Loading","visible","map","disabled","openModal","deleteContact","toast","deletContact","Title","Caption","AppContacts","fetchContacts","userContact","console","log","nanoid","addContact","useAuth"],"sourceRoot":""}